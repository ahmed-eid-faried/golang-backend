// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/address": {
            "get": {
                "description": "Get all Addresses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Get All Addresses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/address.Address"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Create a Address",
                "parameters": [
                    {
                        "description": "Address object",
                        "name": "Address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/address.Address"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "Remove all Addresses from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Remove all Address",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/address/search": {
            "get": {
                "description": "Search address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Search address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/address.Address"
                            }
                        }
                    }
                }
            }
        },
        "/address/{id}": {
            "get": {
                "description": "Get a Address by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Get a Address by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/address.Address"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Address by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Update a Address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address object",
                        "name": "Address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/address.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a Address by ID",
                "tags": [
                    "Address"
                ],
                "summary": "Delete a Address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/addressMongodb": {
            "get": {
                "description": "Get all Addresses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Mongodb"
                ],
                "summary": "Get All Addresses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/addressmongodb.Address"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Mongodb"
                ],
                "summary": "Create a Address",
                "parameters": [
                    {
                        "description": "Address object",
                        "name": "Address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addressmongodb.Address"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "Remove all Addresses from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Mongodb"
                ],
                "summary": "Remove all Address",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/addressMongodb/search": {
            "get": {
                "description": "Search address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Mongodb"
                ],
                "summary": "Search address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/addressmongodb.Address"
                            }
                        }
                    }
                }
            }
        },
        "/addressMongodb/{id}": {
            "get": {
                "description": "Get a Address by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Mongodb"
                ],
                "summary": "Get a Address by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/addressmongodb.Address"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Address by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Mongodb"
                ],
                "summary": "Update a Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address object",
                        "name": "Address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addressmongodb.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a Address by ID",
                "tags": [
                    "Address Mongodb"
                ],
                "summary": "Delete a Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/charge_customer/{id}": {
            "get": {
                "description": "Retrieve a customer from Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve a customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Req object",
                        "name": "Req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stripe.Req"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat2/": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Chat RealTime"
                ],
                "summary": "Get chat for chat realtime",
                "responses": {
                    "200": {
                        "description": "Path for chat realtime",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat2/path": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat RealTime"
                ],
                "summary": "Get Path for chat realtime",
                "responses": {
                    "200": {
                        "description": "Path for chat realtime",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create_customer": {
            "post": {
                "description": "Create a new customer in Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address of the customer",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID (optional)",
                        "name": "account_id",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customer_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get_customer/{id}": {
            "get": {
                "description": "Retrieve a customer from Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve a customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/redis/cache": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis Cache MEMORY"
                ],
                "summary": "Cache a value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key for the value",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Value to be cached",
                        "name": "value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Value cached successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/redis/get": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis Cache MEMORY"
                ],
                "summary": "Get value from cache",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key to fetch from cache",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Value from cache",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/redis/getAll": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis Cache MEMORY"
                ],
                "summary": "Get all keys with their values from cache",
                "responses": {
                    "200": {
                        "description": "All keys with their values",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/redis/remove": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis Cache MEMORY"
                ],
                "summary": "Remove a value from cache",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key to remove from cache",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Value removed successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/redis/removeAll": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis Cache MEMORY"
                ],
                "summary": "Remove all keys from cache",
                "responses": {
                    "200": {
                        "description": "All keys removed successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/redis/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis Cache MEMORY"
                ],
                "summary": "Search for keys matching a pattern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pattern to search for (e.g., 'prefix:*' or '*suffix')",
                        "name": "pattern",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of keys matching the pattern",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/redis/update": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis Cache MEMORY"
                ],
                "summary": "Update a value in cache",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key for the value",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New value",
                        "name": "value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Value updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stripe/capture_payment": {
            "post": {
                "description": "Capture a payment in Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stripe Payment"
                ],
                "summary": "Capture payment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stripe/create_customer": {
            "post": {
                "description": "Create a new customer in Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stripe Payment"
                ],
                "summary": "Create a new customer",
                "responses": {
                    "200": {
                        "description": "customer_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stripe/create_payment_intent": {
            "post": {
                "description": "Create a payment intent in Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stripe Payment"
                ],
                "summary": "Create payment intent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stripe/refund_payment": {
            "post": {
                "description": "Refund a payment in Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stripe Payment"
                ],
                "summary": "Refund payment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stripe/retrieve_customer/{id}": {
            "get": {
                "description": "Retrieve a customer from Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stripe Payment"
                ],
                "summary": "Retrieve customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "Remove all users from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Remove all users",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/users/search": {
            "get": {
                "description": "Search users by username or email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Search users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search keyword (username or email)",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get a user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a user by ID",
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "description": "Upgrade HTTP connection to websocket and handle incoming messages",
                "summary": "Handle websocket connection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "address.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Example City"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                },
                "postal_code": {
                    "type": "string",
                    "example": "12345"
                },
                "state": {
                    "type": "string",
                    "example": "Example State"
                },
                "street": {
                    "type": "string",
                    "example": "123 Example St."
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                }
            }
        },
        "addressmongodb.Address": {
            "type": "object",
            "required": [
                "city",
                "postal_code",
                "state",
                "street",
                "user_id"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Example City"
                },
                "id": {
                    "description": "ID         int    ` + "`" + `json:\"id\" example:\"1\" format:\"int32\"` + "`" + `",
                    "type": "string"
                },
                "postal_code": {
                    "type": "string",
                    "example": "12345"
                },
                "state": {
                    "type": "string",
                    "example": "Example State"
                },
                "street": {
                    "type": "string",
                    "example": "123 Example St."
                },
                "user_id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "stripe.Req": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "golang-backend-9yzj.onrender.com",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "User API",
	Description:      "API for user management",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
